OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader shot3_screen
param	color	Cin	1 1 1		%read{13,13} %write{2147483647,-1}
param	color	LineColor	1 1 1		%read{13,13} %write{2147483647,-1}
param	float	Time	1		%read{5,5} %write{2147483647,-1}
param	float	f	1		%read{1,1} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{13,13}
global	float	u	%read{6,6} %write{2147483647,-1}
global	float	v	%read{1,1} %write{2147483647,-1}
local	float	fuzz	%read{9,10} %write{0,0}
local	float	s	%read{7,7} %write{6,6}
local	float	dist	%read{11,11} %write{8,8}
local	float	inLine	%read{13,13} %write{12,12}
const	float	$const1	0.0250000004		%read{0,0} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3}
temp	float	$tmp2	%read{2,2} %write{1,1}
const	float	$const2	3.14159274		%read{2,2} %write{2147483647,-1}
temp	float	$tmp3	%read{3,3} %write{2,2}
const	float	$const3	0.400000006		%read{4,4} %write{2147483647,-1}
temp	float	$tmp4	%read{5,5} %write{4,4}
temp	float	$tmp5	%read{6,6} %write{5,5}
const	float	$const4	0.5		%read{7,7} %write{2147483647,-1}
temp	float	$tmp6	%read{8,8} %write{7,7}
temp	float	$tmp7	%read{12,12} %write{11,11}
const	float	$const6	0.100000001		%read{9,10} %write{2147483647,-1}
temp	float	$tmp8	%read{11,11} %write{9,9}
temp	float	$tmp9	%read{11,11} %write{10,10}
const	float	$const7	1		%read{12,12} %write{2147483647,-1}
code ___main___
# .\\shot3_screen.osl:10
# 
	assign		fuzz $const1 	%filename{".\\shot3_screen.osl"} %line{10} %argrw{"wr"}
# .\\shot3_screen.osl:12
# 
	mul		$tmp2 v f 	%line{12} %argrw{"wrr"}
	mul		$tmp3 $tmp2 $const2 	%argrw{"wrr"}
	sin		$tmp1 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $tmp1 $const3 	%argrw{"wrr"}
	mul		$tmp5 $tmp4 Time 	%argrw{"wrr"}
	add		s u $tmp5 	%argrw{"wrr"}
# .\\shot3_screen.osl:14
#     float inLine=1-smoothstep(0.1-fuzz,0.1+fuzz,dist);
	sub		$tmp6 s $const4 	%line{14} %argrw{"wrr"}
	abs		dist $tmp6 	%argrw{"wr"}
# .\\shot3_screen.osl:15
#     Cout=mix(Cin,LineColor,inLine);
	sub		$tmp8 $const6 fuzz 	%line{15} %argrw{"wrr"}
	add		$tmp9 $const6 fuzz 	%argrw{"wrr"}
	smoothstep	$tmp7 $tmp8 $tmp9 dist 	%argrw{"wrrr"}
	sub		inLine $const7 $tmp7 	%argrw{"wrr"}
# .\\shot3_screen.osl:16
# }
	mix		Cout Cin LineColor inLine 	%line{16} %argrw{"wrrr"}
	end
